image:
  repository: tccr.io/truecharts/clickhouse
  pullPolicy: IfNotPresent
  tag: 23.2.1.2537@sha256:669278d98936a2d12bf8f331067afb6a34e5570fdcb37b854bb5d0b2d8f30108

workload:
  main:
    type: StatefulSet
    replicas: 1
    strategy: RollingUpdate
    podSpec:
      containers:
        main:
          env:
            CLICKHOUSE_DB: "{{ .Values.clickhouseDatabase }}"
            CLICKHOUSE_USER: "{{ .Values.clickhouseUsername }}"
            CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: "{{ .Values.clickhouseDefaultAccessManagement }}"
            CLICKHOUSE_PASSWORD:
              secretKeyRef:
                name: "credentials"
                key: "clickhouse-password"

          probes:
            liveness:
              type: http
              path: /ping
            readiness:
              type: http
              path: /ping
            startup:
              type: http
              path: /ping

securityContext:
  container:
    readOnlyRootFilesystem: false
    # Optional capabilities advanced ClickHouse features. See also:
    # https://github.com/ClickHouse/ClickHouse/blob/master/docker/server/README.md#linux-capabilities
    # https://kb.altinity.com/altinity-kb-setup-and-maintenance/altinity-kb-clickhouse-in-docker/
    # https://github.com/ClickHouse/ClickHouse/blob/b844c36a9d5e76300a88b4f49e6debccf1ad22e4/programs/install/Install.cpp#L793-L804
    # capabilities:
    #   add:
    #     - IPC_LOCK
    #     - NET_ADMIN
    #     - SYS_NICE

service:
  main:
    ports:
      main:
        port: 8123
        protocol: http
        targetPort: 8123

volumeClaimTemplates:
  data:
    enabled: true
    mountPath: /var/lib/clickhouse

clickhouseDatabase: "test"
clickhouseUsername: "test"
clickhousePassword: "testpass"
clickhouseDefaultAccessManagement: 0
existingSecret: ""

secret:
  credentials:
    enabled: true
    data:
      clickhouse-password: '{{ ( .Values.clickhousePassword | default "empty" ) }}'

portal:
  open:
    enabled: false

manifestManager:
  enabled: false
