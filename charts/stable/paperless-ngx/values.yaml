image:
  repository: tccr.io/truecharts/paperless-ng
  pullPolicy: IfNotPresent
  tag: v1.15.1@sha256:291a3f9d9245ff2fa9f7bfe01f2665eed17b33a36e0ad3af5d2d5222422ee665

service:
  main:
    ports:
      main:
        targetPort: 8000
        port: 10140

persistence:
  data:
    enabled: true
    mountPath: "/data"
  consume:
    enabled: true
    mountPath: "/consume"
  media:
    enabled: true
    mountPath: "/media"
  varrun:
    enabled: false

redis:
  enabled: true
  redisUsername: default

cnpg:
  main:
    enabled: true
    user: paperless-ng
    database: paperless-ng

portal:
  open:
    enabled: true

securityContext:
  container:
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    runAsUser: 0
    runAsGroup: 0

workload:
  main:
    podSpec:
      containers:
        main:
          probes:
            liveness:
              type: http
              httpHeaders:
                Host: localhost
            startup:
              type: http
              httpHeaders:
                Host: localhost
            readiness:
              type: http
              httpHeaders:
                Host: localhost
          env:
            PAPERLESS_PORT: "{{ .Values.service.main.ports.main.targetPort }}"
            PAPERLESS_DATA_DIR: "/data/"
            PAPERLESS_CONSUMPTION_DIR: "/consume/"
            PAPERLESS_MEDIA_ROOT: "/media/"
            PAPERLESS_URL: ""
            USERMAP_UID: "{{ .Values.securityContext.container.PUID }}"
            USERMAP_GID: "{{ .Values.securityContext.pod.fsGroup }}"
            PAPERLESS_TIME_ZONE: "{{ .Values.TZ }}"
            PAPERLESS_DBNAME: "{{ .Values.cnpg.main.database }}"
            PAPERLESS_DBUSER: "{{ .Values.cnpg.main.user }}"
            PAPERLESS_DBPORT: "5432"
            PAPERLESS_WEBSERVER_WORKERS: 2
            PAPERLESS_DBPASS:
              secretKeyRef:
                name: cnpg-main-user
                key: password
            PAPERLESS_DBHOST:
              secretKeyRef:
                name: cnpg-main-urls
                key: host
            PAPERLESS_SECRET_KEY:
              secretKeyRef:
                name: secrets
                key: PAPERLESS_SECRET_KEY
            PAPERLESS_REDIS:
              secretKeyRef:
                expandObjectName: false
                name: '{{ printf "%s-%s" .Release.Name "rediscreds" }}'
                key: url
            PAPERLESS_ADMIN_USER: "admin"
            PAPERLESS_ADMIN_PASSWORD: "admin"
            PAPERLESS_ADMIN_MAIL: "admin@admin.com"
