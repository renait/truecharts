image:
  repository: tccr.io/truecharts/readarr
  pullPolicy: IfNotPresent
  tag: v0.1.4.1596@sha256:8228fb87ef5626392c481849a7f8d089e7ae16afc148da54e7ef0a1bd4669483

securityContext:
  readOnlyRootFilesystem: false

env:
  READARR__PORT: "{{ .Values.service.main.ports.main.port }}"
  READARR__AUTHENTICATION_METHOD: ""
  READARR__POSTGRES_PORT: 5432
  READARR__POSTGRES_USER: "{{ .Values.postgresql.postgresqlUsername }}"
  READARR__POSTGRES_MAIN_DB: "{{ .Values.postgresql.postgresqlDatabase }}"
  READARR__POSTGRES_HOST:
    secretKeyRef:
      name: dbcreds
      key: plainhost
  READARR__POSTGRES_PASSWORD:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password

service:
  main:
    ports:
      main:
        port: 8787

probes:
  liveness:
    enabled: true
    ## Set this to true if you wish to specify your own livenessProbe
    custom: true
    ## The spec field contains the values for the default livenessProbe.
    ## If you selected custom: true, this field holds the definition of the livenessProbe.
    spec:
      exec:
        command:
          - /usr/bin/env
          - bash
          - -c
          - curl --fail localhost:8787/api/v1/system/status?apiKey=`IFS=\> && while
            read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
      failureThreshold: 5
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10

persistence:
  config:
    enabled: true
    mountPath: /config

postgresql:
  enabled: true
  existingSecret: dbcreds
  postgresqlDatabase: readarr
  postgresqlUsername: readarr

portal:
  enabled: true
