# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{controllerExpert}
# Include{fixedEnv}
# Include{containerConfig}
  - variable: env
    group: "App Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: LLDAP_LDAP_USER_PASS
          group: "App Configuration"
          label: "Admin Password"
          schema:
            type: string
            required: true
            default: "change me"
        - variable: LLDAP_LDAP_BASE_DN
          group: "App Configuration"
          label: "Base DN for LDAP"
          schema:
            type: string
            required: true
            default: "dc=example,dc=com"
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 17170
                              required: true
        - variable: ldap
          label: "LDAP Service Port Configuration"
          description: "The Service in which external sources will connect to the LDAP service"
          schema:
            type: dict
            attrs:
              - variable: port
                label: "Port"
                description: "This port exposes the container port on the service"
                schema:
                  type: int
                  default: 3890
                  required: true
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: data
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
# Include{ingressList}
# Include{securityContextAdvanced}
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 568
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{postgresql}
# Include{postgresqlBasics}
# Include{addons}
# Include{codeserver}
# Include{promtail}
# Include{netshoot}
# Include{vpn}
