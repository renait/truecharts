# Include{groups}
portals:
  open:
# Include{portalLink}
    path: "/"
  admin:
# Include{portalLink}
    path: "/admin/"
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}

  - variable: secretEnv
    group: "App Configuration"
    label: "Image Secrets"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: DNS_SERVER_ADMIN_PASSWORD
          label: "DNS_SERVER_ADMIN_PASSWORD"
          description: "DNS web console admin user password."
          schema:
            type: string
            default: ""
            private: true
            required: true
  - variable: env
    group: "App Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: DNS_SERVER_DOMAIN
          label: "DNS_SERVER_DOMAIN"
          description: "The primary domain name used by this DNS Server to identify itself."
          schema:
            type: string
            default: "dns-server"
            required: true
        - variable: DNS_SERVER_PREFER_IPV6
          label: "DNS_SERVER_PREFER_IPV6"
          description: "DNS Server will use IPv6 for querying whenever possible with this option enabled."
          schema:
            type: boolean
            default: false
        - variable: DNS_SERVER_OPTIONAL_PROTOCOL_DNS_OVER_HTTP
          label: "DNS_SERVER_OPTIONAL_PROTOCOL_DNS_OVER_HTTP"
          description: "Enables DNS server optional protocol DNS-over-HTTP on TCP port 8053 to be used with a TLS terminating reverse proxy like nginx."
          schema:
            type: boolean
            default: false
        - variable: DNS_SERVER_RECURSION
          label: "DNS_SERVER_RECURSION"
          schema:
            type: string
            default: "AllowOnlyForPrivateNetworks"
            enum:
              - value: "AllowOnlyForPrivateNetworks"
                description: "AllowOnlyForPrivateNetworks"
              - value: "UseSpecifiedNetworks"
                description: "UseSpecifiedNetworks"
              - value: "Allow"
                description: "Allow"
              - value: "Deny"
                description: "Deny"
        - variable: DNS_SERVER_RECURSION_DENIED_NETWORKS
          label: "DNS_SERVER_RECURSION_DENIED_NETWORKS"
          description: "Comma separated list of IP addresses or network addresses to deny recursion. Valid only for UseSpecifiedNetworks recursion option."
          schema:
            show_if: [["DNS_SERVER_RECURSION", "=", "UseSpecifiedNetworks"]]
            type: string
            default: "1.1.1.0/24"
        - variable: DNS_SERVER_RECURSION_ALLOWED_NETWORKS
          label: "DNS_SERVER_RECURSION_ALLOWED_NETWORKS"
          description: "Comma separated list of IP addresses or network addresses to allow recursion. Valid only for `UseSpecifiedNetworks` recursion option."
          schema:
            show_if: [["DNS_SERVER_RECURSION", "=", "UseSpecifiedNetworks"]]
            type: string
            default: "127.0.0.1, 192.168.1.0/24"
        - variable: DNS_SERVER_ENABLE_BLOCKING
          label: "DNS_SERVER_ENABLE_BLOCKING"
          description: "Sets the DNS server to block domain names using Blocked Zone and Block List Zone."
          schema:
            type: boolean
            default: false
        - variable: DNS_SERVER_ALLOW_TXT_BLOCKING_REPORT
          label: "DNS_SERVER_ALLOW_TXT_BLOCKING_REPORT"
          description: "Specifies if the DNS Server should respond with TXT records containing a blocked domain report for TXT type requests."
          schema:
            type: boolean
            default: false
        - variable: DNS_SERVER_FORWARDERS
          label: "DNS_SERVER_FORWARDERS"
          description: "Comma separated list of forwarder addresses."
          schema:
            type: string
            default: "1.1.1.1, 8.8.8.8"
        - variable: DNS_SERVER_FORWARDER_PROTOCOL
          label: "DNS_SERVER_FORWARDER_PROTOCOL"
          description: "Forwarder protocol options: Udp, Tcp, Tls, Https, HttpsJson."
          schema:
            type: string
            default: "Tcp"
            enum:
              - value: "AllowOnlyForPrivateNetworks"
                description: "AllowOnlyForPrivateNetworks"
              - value: "Udp"
                description: "Udp"
              - value: "Tcp"
                description: "Tcp"
              - value: "Tls"
                description: "Tls"
              - value: "Https"
                description: "Https"
              - value: "HttpsJson"
                description: "HttpsJson"
# Include{containerConfig}
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 5380
                              required: true
        - variable: dns-udp
          label: "DNS-UDP Service"
          description: "DNS-UDP Service"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: dns-udp
                      label: "DNS-UDP Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 53
                              required: true
        - variable: dns-tcp
          label: "DNS-TCP Service"
          description: "DNS-TCP Service"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: dns-tcp
                      label: "DNS-TCP Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 53
                              required: true
        - variable: dns-tls
          label: "DNS-TLS Service"
          description: "DNS-TLS Service"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: dns-tls
                      label: "DNS-TLS Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 853
                              required: true
        - variable: dns-cert
          label: "DNS-over-HTTPS Certbot Service"
          description: "DNS-over-HTTPS Certbot Service"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: dns-cert
                      label: "DNS-over-HTTPS Certbot Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10202
                              required: true
        - variable: dns-https
          label: "DNS-over-HTTPS Service"
          description: "DNS-over-HTTPS Service"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: dns-https
                      label: "DNS-over-HTTPS Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10203
                              required: true
        - variable: dns-https-proxy
          label: "DNS-over-HTTPS Reverse Proxy Service"
          description: "DNS-over-HTTPS Reverse Proxy Service"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: dns-https-proxy
                      label: "DNS-over-HTTPS Reverse Proxy Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10204
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
        - variable: dns-https-proxy
          label: "DNS-over-HTTPS Reverse Proxy"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}

              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
