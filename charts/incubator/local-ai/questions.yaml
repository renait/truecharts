# Include{groups}
portals: {}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}

                                - variable: imageSelector
                                  label: Select Image
                                  schema:
                                    type: string
                                    default: image
                                    enum:
                                      - value: image
                                        description: Image
                                      - value: ffmpegImage
                                        description: FFmpeg
                                      - value: cublasCuda12Image
                                        description: Cublas Cuda 12
                                      - value: cublasCuda12FfmpegImage
                                        description: Cublas Cuda 12 FFmpeg
                                      - value: cublasCuda11Image
                                        description: Cublas Cuda 11
                                      - value: cublasCuda11FfmpegImage
                                        description: Cublas Cuda 11 FFmpeg

# Include{containerBasic}
# Include{containerAdvanced}

  - variable: localai
    group: App Configuration
    label: LocalAI Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: build_type
          label: Build Type
          description: Specify a build type.
          schema:
            type: string
            default: "openblas"
            enum:
              - value: openblas
                description: Openblas
              - value: cublas
                description: Cublas
              - value: clblas
                description: Clblas
        - variable: rebuild
          label: Rebuild
          description: Set to false to disable rebuilding from source.
          schema:
            type: boolean
            default: false
        - variable: go_tags
          label: Go Tags
          schema:
            type: string
            default: "stablediffusion"
            show_if: [[rebuild, "=", true]]
            enum:
              - value: stablediffusion
                description: Stable Diffusion
              - value: tts
                description: TTS
        - variable: context_size
          label: Context Size
          description: Default models context size.
          schema:
            type: string
            default: "512"
        - variable: debug
          label: Debug
          description: Enable Debug Mode.
          schema:
            type: boolean
            default: true
        - variable: cors_settings
          label: Show Cors Policy Settings
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: CORS
                label: Enable CORS
                schema:
                  type: boolean
                  default: true
              - variable: CORS_ALLOW_ORIGINS
                label: Cors Allows Origins
                schema:
                  type: string
                  required: true
                  default: "*"

# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 8080
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: models
          label: App Models Storage
          description: Stores the Application Models.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: images
          label: App Images Storage
          description: Stores the Application Images.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
# Include{ingressList}

# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
